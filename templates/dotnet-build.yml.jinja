stages:
  - build
  - pack
  - push

{% set tag = helpers.get_version(env) %}
{% set job_discriminator = helpers.get_job_discriminator(task) %}
{% set runtime = 'any' %}

{% for package in task.packages %}
{% set package_discriminator = helpers.sanitize_csproj(package.csproj) %}
dotnet-pack{{ job_discriminator }}:{{ package_discriminator }}:{{ tag }}:
  stage: pack
  image: {{ images.dotnet }}
  script:
    - dotnet pack {{ package.csproj }} -c Release --runtime {{ runtime }} -p:PackageVersion={{ tag }} -o nugets/{{ package_discriminator }} -p:RuntimeIdentifier={{ runtime }}
  artifacts:
    paths:
      - nugets/{{ package_discriminator }}


{% for registry in task.registries %}
dotnet-push{{job_discriminator}}:{{ package_discriminator }}:{{ registry }}:{{ tag }}:
  stage: push
  image: {{ images.dotnet }}
  needs:
    - dotnet-pack{{ job_discriminator }}:{{ package_discriminator }}:{{ tag }}
  variables:
    {% if registry == 'gitlab' %}
    NUGET_API_KEY: $GITLAB_CR_PASSWORD
    NUGET_SOURCE: $GITLAB_NUGET_REPOSITORY_URL
    {% endif %}
  script:
    - dotnet nuget push ./nugets/{{ package_discriminator }}/* -s $NUGET_SOURCE -k $NUGET_API_KEY
{% endfor %}
{% endfor %}
