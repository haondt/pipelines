stages:
  - build
  - push

{% set version = helpers.get_version(env) %}
docker-build-{{ task.image }}:
  stage: build
  image: {{ images.docker }}
  script:
    {% if task.qemu == True and 'platforms' in task and task.platforms | select('!=', 'linux/amd64') | list -%}
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
    {% endif -%}
    - >-
        docker buildx build
        {% if 'platforms' in task and task['platforms']|length > 0 -%}
        --platform {{ task['platforms']|join(',') }}
        {% else -%}
        --platform linux/amd64
        {% endif -%}
        -t {{ task.image }}
        -f {{ task.file|default('Dockerfile') }}
        --load
        {% if version != None -%}
        --label org.opencontainers.image.version {{ version }}
        {% endif -%}
        --label org.opencontainers.image.created "$(date --utc --iso-8601=seconds)"
        {% for label_name in ['authors', 'url', 'documentation', 'source', 'vendor', 'licenses', 'title', 'description'] -%}
        {% if label_name in task.labels and task.labels[label_name] is string -%}
        --label org.opencontainers.{{ label_name }} {{ (task.labels[label_name] or '')|tojson }}
        {% endif -%}
        {% endfor -%}
        --label 
        {{ task.context|default('.') }}


{% for registry in task.registries %}
{% for tag_source, tag  in helpers.get_tags(env).items() %}
docker-push-{{ task.image }}:{{ registry }}:{{ tag }}:
  stage: push
  needs:
    - docker-build-{{ task.image }}
  image: {{ images.docker }}
  {% if helpers.should_use_manual_push(task, tag_source, env) %}
  when: manual
  {% endif %}
  script:
    {% if registry == 'gitlab' %}
    - echo "$GITLAB_CR_PASSWORD" | docker login $GITLAB_CR_REGISTRY -u $GITLAB_CR_USERNAME --password-stdin
    - docker tag {{ task.image }} {{ env.GITLAB_CR_REGISTRY}}/{{ task.image }}:{{ tag }}
    - docker push {{ env.GITLAB_CR_REGISTRY }}/{{ task.image }}:{{ tag }}
    {% elif registry == 'docker-hub' %}
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - docker tag {{ task.image }} {{ env.DOCKER_HUB_REPOSITORY }}/{{ task.image }}:{{ tag }}
    - docker push {{ env.DOCKER_HUB_REPOSITORY }}/{{ task.image }}:{{ tag }}
    {% endif %}
{% endfor %}
{% endfor %}
