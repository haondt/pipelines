stages:
  - build
  - push

{% set tag = helpers.get_version(env) %}

python-build-{{ task.package }}:
  stage: build
  image: {{ images.python }}
  script:
    - cd {{ task.context|default('.') }}
    - python3 /scripts/set-version.py -f {{ task.file|default('pyproject.toml') }} {{ tag }}
    - python3 -m flit build
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz

{% for registry in task.registries %}
python-push:{{ registry }}:{{ tag }}:
  stage: push
  image: {{ images.python }}
  needs:
    - python-build-{{ task.package }}
  {% if helpers.should_use_manual_push(task, env) %}
  when: manual
  {% endif %}
  variables:
    {% if registry == 'testpypi' %}
    TWINE_USERNAME: '__token__'
    TWINE_PASSWORD: $TEST_PYPI_API_TOKEN
    {% elif registry == 'pypi' %}
    TWINE_USERNAME: '__token__'
    TWINE_PASSWORD: $PYPI_API_TOKEN
    {% elif registry == 'gitlab' %}
    TWINE_USERNAME: $GITLAB_CR_USERNAME
    TWINE_PASSWORD: $GITLAB_CR_PASSWORD
    {% endif %}
  script:
    {% if registry == 'testpypi' %}
    - python3 -m twine upload --skip-existing -r testpypi dist/*
    {% elif registry == 'pypi' %}
    - python3 -m twine upload --skip-existing -r pypi dist/*
    {% elif registry == 'gitlab' %}
    - python3 -m twine upload --skip-existing --repository-url $GITLAB_PYPI_REPOSITORY_URL dist/*
    {% endif %}
{% endfor %}
