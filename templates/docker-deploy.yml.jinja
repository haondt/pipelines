stages:
  - check

docker-check-changes-{{ task.target }}:
  stage: check
  image: {{ images.docker_deployer }}
  script:
    - INITIAL_DIR=$(pwd)
    - cd {{ task.context|default('.') }}
    - python3 /scripts/get_changes.py > "$INITIAL_DIR/changed_services.txt"
  artifacts:
    paths:
      - changed_services.txt

docker-deploy-build-downstream-{{ task.target }}:
  stage: check
  image: {{ images.hephaestus }}
  needs:
    - docker-check-changes-{{ task.target }}
    - pipeline: $ROOT_PIPELINE_ID
      job: generate
  script:
    - cd pipelines
    - |
      if ! grep -q '[^[:space:]]' ../changed_services.txt; then
        echo "No changes detected"
        python3 render_template.py {{ task.index }} noop > "../generated_pipeline.yml"
      else
        python3 render_template.py {{ task.index }} docker-deploy-downstream > "../generated_pipeline.yml"
      fi
  artifacts:
    paths:
      - changed_services.txt
      - generated_pipeline.yml

docker-deploy-trigger:
  stage: check
  needs:
    - docker-deploy-build-downstream-{{ task.target }}
  trigger:
    include:
      - artifact: generated_pipeline.yml
        job: docker-deploy-build-downstream-{{ task.target }}
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
    ROOT_PIPELINE_ID: $ROOT_PIPELINE_ID
    ROOT_PIPELINE_SOURCE: $ROOT_PIPELINE_SOURCE
