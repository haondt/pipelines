{% set scripts_dir = 'pipelines/scripts' %}

stages:
  - check

docker-check-changes:
  stage: check
  image: {{ images.docker_deployer_v2 }}
  needs:
    - pipeline: $ROOT_PIPELINE_ID
      job: generate
  script:
    - make -f {{ scripts_dir }}/docker-deployer/makefile changes > changed_services.yml
    - make -f {{ scripts_dir }}/docker-deployer/makefile pruned-changes CHANGES=changed_services.yml
  artifacts:
    paths:
      - changed_services.yml

docker-deploy-build-downstream:
  stage: check
  image: {{ images.hephaestus }}
  needs:
    - docker-check-changes
    - pipeline: $ROOT_PIPELINE_ID
      job: generate
  script:
    - |
      if yq -e '.. | select(has("status") and .status != "unchanged")' changed_services.yml >/dev/null; then
        make -f {{ scripts_dir }}/hephaestus/makefile render-template TASK_INDEX={{ task.index }} TEMPLATE_NAME=docker-deploy-downstream-v2 EXTRA_ARGS='-x project_base_dir=. -x changed_services_file=changed_services.yml' > "generated_pipeline.yml"
      else
        echo "No changes detected"
        make -f {{ scripts_dir }}/hephaestus/makefile render_template TASK_INDEX={{ task.index }} TEMPLATE_NAME=noop > "generated_pipeline.yml"
      fi
  artifacts:
    paths:
      - changed_services.yml
      - generated_pipeline.yml
    expire_in: {{ env['DEFAULT_ARTIFACT_EXPIRY'] }}

docker-deploy-trigger:
  stage: check
  needs:
    - docker-deploy-build-downstream
  trigger:
    include:
      - artifact: generated_pipeline.yml
        job: docker-deploy-build-downstream
    strategy: depend
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
    ROOT_PIPELINE_ID: $ROOT_PIPELINE_ID
    ROOT_PIPELINE_SOURCE: $ROOT_PIPELINE_SOURCE
