stages:
  - check

docker-check-changes:
  stage: check
  image: {{ images.docker_deployer_v2 }}
  script:
    - python3 pipelines/scripts/docker-deployer/get_changes.py > changed_services.yml
    - cat changed_services.yml
  artifacts:
    paths:
      - changed_services.yml

docker-deploy-build-downstream:
  stage: check
  image: {{ images.hephaestus }}
  needs:
    - docker-check-changes
    - pipeline: $ROOT_PIPELINE_ID
      job: generate
  script:
    - cd pipelines
    - |
      if ! grep -q '[^[:space:]]' ../changed_services.yml; then
        echo "No changes detected"
        python3 render_template.py {{ task.index }} noop > "../generated_pipeline.yml"
      else
        python3 render_template.py {{ task.index }} docker-deploy-downstream-v2 -x project_base_dir=.. -x changed_services_file=../changed_services.yml > "../generated_pipeline.yml"
      fi
  artifacts:
    paths:
      - changed_services.yml
      - generated_pipeline.yml
    expire_in: {{ env['DEFAULT_ARTIFACT_EXPIRY'] }}

docker-deploy-trigger:
  stage: check
  needs:
    - docker-deploy-build-downstream
  trigger:
    include:
      - artifact: generated_pipeline.yml
        job: docker-deploy-build-downstream
    strategy: depend
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
    ROOT_PIPELINE_ID: $ROOT_PIPELINE_ID
    ROOT_PIPELINE_SOURCE: $ROOT_PIPELINE_SOURCE
